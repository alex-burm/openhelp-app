# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Infrastructure/Persistence/Doctrine/Entity'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Domain\User\Repository\UserRepositoryInterface: '@App\Infrastructure\Persistence\Doctrine\Repository\DoctrineUserRepository'
    App\Domain\User\Repository\PasswordResetTokenRepository: '@App\Infrastructure\Persistence\Redis\Repository\RedisPasswordResetTokenRepository'
    App\Domain\Workspace\Repository\WorkspaceRepositoryInterface: '@App\Infrastructure\Persistence\Doctrine\Repository\DoctrineWorkspaceRepository'
    App\Domain\User\Service\PasswordHasher: '@App\Infrastructure\Security\PasswordHasherService'
    App\Domain\User\Service\CurrentUserProviderInterface: '@App\Infrastructure\Security\CurrentUserProvider'
    App\Domain\Service\MailHandlerInterface: '@App\Infrastructure\Service\MailHandler'

    App\Infrastructure\Persistence\Doctrine\Listener\WorkspaceListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist }

    App\Infrastructure\Persistence\Redis\LoginRateLimiterStorage:
        arguments:
            $rateLimiterFactory: '@limiter.login_attempts'

    App\Infrastructure\Persistence\Redis\ForgotPasswordLimiterStorage:
        arguments:
            $rateLimiterFactory: '@limiter.forgot_password'
